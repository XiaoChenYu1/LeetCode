public class Demo{
  public static void main(String[] args){
     // 准备第一棵树
     TreeNode p = new TreeNode();
     // 准备第二棵树
     TreeNode q = new TreeNode();
     boolean success = isSameTree(p,q);
     System.out.println(success);
  }
  public boolean isSameTree(TreeNode p, TreeNode q) {
        // 如果两个结点都同时到达了叶子结点的的左右子节点，那么就是空的null那么就是相同结构
        if(p == null && q == null) {
             return true;
        }else if(p == null || q == null ){
            // 如果有一个不为空，但另外一个为空。那就是不相同的结构
            return false;
        }else if(p.val == q.val){
            // 如果当前两个结点的值是相同的，那么现在递归判断左右子树是不是相同的
            return isSameTree(p.left,q.left) && isSameTree(p.right,q.right);
        }else{
            // 那么就是当前两个结点的值是不相同的，那么返回false
            return false;
        }
    }
}

class TreeNode{
  int val;
  TreeNode left;
  TreeNode right;
}
